package cms;

import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Scanner;

public class ContentHSQL {

    DbFunctions DB=new DbFunctions();
    Scanner sc = new Scanner(System.in);

    //Cria uma tabela de conteudo
    public void createTable(Connection conn, String table_name) {
        String query = "CREATE TABLE IF NOT EXISTS " + table_name + " (" +
                "content_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, " +
                "texto VARCHAR(255), " +
                "titulo VARCHAR(255), " +
                "autor CHAR(255) NOT NULL, " +
                "FOREIGN KEY (autor) REFERENCES Table_Users(username));";
        try (Statement statement = conn.createStatement()) {
            statement.executeUpdate(query);
            System.out.println("Tabela '" + table_name + "' criada com sucesso!");
            System.out.println("-----------------------------");
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

    //Insere conteudo na tabela de conteudo
    public void insertInto(Connection conn, String table_name, String texto, String titulo, Users autor) {
        Statement statement;
        String name = autor.getName();
        try {
            // Check if the user exists
            String checkUserQuery = String.format("SELECT COUNT(*) FROM Table_Users WHERE username = '%s';", name);
            statement = conn.createStatement();
            ResultSet rs = statement.executeQuery(checkUserQuery);
            rs.next();
            int userCount = rs.getInt(1);

            if (userCount > 0) {
                // User exists, proceed with insert
                String query = String.format("INSERT INTO %s (texto, titulo, autor) VALUES ('%s', '%s', '%s');", table_name, texto, titulo, name);
                statement.executeUpdate(query);

                Content currentContent = new Content(userCount, texto,  titulo,  autor);
                ContentList content = new ContentList();
                content.save(currentContent);

                System.out.println("Dados inseridos com sucesso na tabela " + table_name + "!");
                System.out.println("-----------------------------");
            } else {
                System.out.println("Erro: Usuário '" + name + "' não encontrado na tabela Table_Users.");
                System.out.println("-----------------------------");
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }


    //Lê a tabela de conteudo
    public void read(Connection conn, String table_name){
        Statement statement;
        ResultSet rs = null;
        try{
            String query = String.format("SELECT * FROM %s",table_name);
            statement = conn.createStatement();
            rs=statement.executeQuery(query);
            while(rs.next()){
                System.out.println("Count: " + rs.getString("content_id"));
                System.out.println("Autor: " + rs.getString("autor"));
                System.out.println("Título: " + rs.getString("titulo"));
                System.out.println("Texto: " + rs.getString("texto"));
                System.out.println("-----------------------------");
            }
        }catch(Exception e){
            System.out.println(e);
        }
    }

    public Users createContent(Object connection, String table_content, Users login){
        System.out.println("Digite o título a ser adicionado no banco de dados: ");
        String titulo = sc.nextLine();

        System.out.println("Digite o texto a ser adicionado no banco de dados: ");
        String texto = sc.nextLine();
        insertInto((Connection) connection, table_content, texto, titulo, login);
        return login;
    }

    public Users changeContent(Object connection, String table_content, Users login){
        String newContent = null;
        System.out.println("=======================");
        System.out.println("1 - Mudar título");
        System.out.println("2 - Mudar conteudo");
        System.out.println("=======================");
        int op = sc.nextInt();
        switch (op){
            case 1:
                System.out.println("Digite o título a ser modificado: ");
                if (sc.hasNextLine()) sc.nextLine(); // Limpa qualquer nova linha residual
                String oldTitle = sc.nextLine();

                System.out.println("Digite o novo título: ");
                newContent = sc.nextLine();

                DB.update((Connection) connection, table_content, "titulo", oldTitle, newContent);
                break;
            case 2:
                System.out.println("Digite o conteudo a ser modificado: ");
                if (sc.hasNextLine()) sc.nextLine(); // Limpa qualquer nova linha residual
                String oldContent = sc.nextLine();

                System.out.println("Digite o novo conteudo: ");
                newContent = sc.nextLine();

                DB.update((Connection) connection, table_content, "texto", oldContent, newContent);
                break;
            default:
                System.out.println("Opção inválida. Tente novamente.");
                break;
        }
        return login;
    }

    public Users deleteContent(Object connection, String table_content, Users login){
        String delContent = null;
        System.out.println("Digite o título do conteudo a ser deletado: ");
        delContent = sc.nextLine();

        try {
            DB.delete_row((Connection) connection, table_content, "titulo", delContent);
        } catch (Exception e) {
            System.out.println(e);
        }
        return login;
    }

}
